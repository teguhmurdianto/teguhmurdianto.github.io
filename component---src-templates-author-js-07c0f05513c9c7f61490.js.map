{"version":3,"sources":["webpack:///./src/templates/author.js","webpack:///./src/components/Navigation.js","webpack:///./src/components/PostList.js"],"names":["AuthorTemplate","pageContext","data","location","author","site","siteMetadata","title","siteUrl","posts","navItems","edges","totalCount","postsByAuthor","filter","post","node","frontmatter","id","name","bodyAttributes","class","className","profileImageFile","fixed","childImageSharp","alt","bio","website","target","rel","href","twitter","getSocialUrl","facebook","rss","postsPerPage","pageQuery","Navigation","query","render","isHomepage","pathname","withPrefix","to","src","logo","role","map","index","isCurrent","slug","key","url","label","social","PostList","props","handleScroll","ticking","requestAnimationFrame","update","document","documentElement","offsetHeight","window","scrollY","innerHeight","setState","postsToShow","state","maxPages","removeEventListener","length","componentDidMount","addEventListener","this","componentWillUnmount","slice","React","Component"],"mappings":"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","file":"component---src-templates-author-js-07c0f05513c9c7f61490.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport Image from 'gatsby-image';\n\nimport Layout from '../components/Layout';\nimport PostList from '../components/PostList';\nimport Navigation from '../components/Navigation';\nimport Icons from '../components/Icons';\nimport { getSocialUrl } from '../utils/url';\n\nconst AuthorTemplate = ({ pageContext, data, location }) => {\n  const { author } = pageContext;\n  const { title, siteUrl } = data.site.siteMetadata;\n  const { posts, navItems } = data;\n  const { edges, totalCount } = posts;\n\n  const postsByAuthor = edges.filter(\n    (post) => post.node.frontmatter.author.id === author.id\n  );\n\n  return (\n    <Layout location={location}>\n      <Helmet\n        title={`Posts By ${author.name} - ${title}`}\n        bodyAttributes={{\n          class: 'author-template',\n        }}\n      />\n      <header className='site-header outer {{#if feature_image}}'>\n        {/* // style='background-image: url({{feature_image}}){{else}}no-cover{{/if}}'> */}\n        <div className='inner'>\n          <Navigation location={location} navItems={navItems} />\n          <div className='site-header-content'>\n            {author.profileImageFile && (\n              <Image\n                className='author-profile-image'\n                fixed={author.profileImageFile.childImageSharp.fixed}\n                alt={author.name}\n              />\n            )}\n            <h1 className='site-title'>{author.name}</h1>\n            {author.bio && <h2 className='author-bio'>{author.bio}</h2>}\n            {/* <h2 className='site-description'>\n              {tag.description || `A collection of ${totalCount} post${totalCount > 1 ? 's' : ''}`}\n            </h2> */}\n            <div className='author-meta'>\n              {author.location && (\n                <div className='author-location'>\n                  {author.location} <span className='bull'>&bull;</span>\n                </div>\n              )}\n              <div className='author-stats'>\n                {totalCount === 0\n                  ? 'No posts'\n                  : `${totalCount} post${totalCount > 1 ? 's' : ''}`}\n                <span className='bull'>&bull;</span>\n              </div>\n              {author.website && (\n                <a\n                  className='social-link social-link-wb'\n                  target='_blank'\n                  rel='noreferrer noopener'\n                  href={author.website}\n                >\n                  <Icons.website />\n                </a>\n              )}\n              {author.twitter && (\n                <a\n                  className='social-link social-link-tw'\n                  target='_blank'\n                  rel='noreferrer noopener'\n                  href={getSocialUrl('twitter', author.twitter)}\n                >\n                  <Icons.twitter />\n                </a>\n              )}\n              {author.facebook && (\n                <a\n                  className='social-link social-link-fb'\n                  target='_blank'\n                  rel='noreferrer noopener'\n                  href={getSocialUrl('facebook', author.facebook)}\n                >\n                  <Icons.facebook />\n                </a>\n              )}\n              <a\n                className='social-link social-link-rss'\n                target='_blank'\n                rel='noreferrer noopener'\n                href={`https://feedly.com/i/subscription/feed/${siteUrl}/rss.xml`}\n              >\n                <Icons.rss />\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      <PostList posts={postsByAuthor} postsPerPage={10} />\n    </Layout>\n  );\n};\n\nexport default AuthorTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    navItems: allNavigationYaml {\n      edges {\n        node {\n          label\n          url\n        }\n      }\n    }\n    posts: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          ...PostCardFragment\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link, withPrefix, StaticQuery, graphql } from 'gatsby';\nimport Icons from './Icons';\n\nimport logo from '../assets/logo.png';\n\nconst Navigation = ({ location }) => (\n  <StaticQuery\n    query={graphql`\n      {\n        navItems: allNavigationYaml {\n          edges {\n            node {\n              label\n              url\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title\n            siteUrl\n            social {\n              facebook\n              twitter\n            }\n          }\n        }\n      }\n    `}\n    render={({ navItems, site }) => {\n      const isHomepage = location.pathname === withPrefix('/'),\n        siteMetadata = site.siteMetadata;\n      return (\n        <nav className='site-nav'>\n          <div className='site-nav-left'>\n            {!isHomepage && (\n              <Link className='site-nav-logo' to={'/'}>\n                <img src={logo} alt={siteMetadata.title} />\n              </Link>\n            )}\n            <ul className='nav' role='menu'>\n              {navItems.edges.map(({ node }, index) => {\n                const isCurrent = withPrefix(node.slug) === location.pathname;\n                return (\n                  <li\n                    className={isCurrent ? 'nav-current' : ''}\n                    key={index}\n                    role='menuitem'\n                  >\n                    <Link to={node.url}>{node.label}</Link>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <div className='site-nav-right'>\n            <div className='social-links'>\n              {siteMetadata.social.facebook && (\n                <a\n                  className='social-link social-link-fb'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href={`https://facebook.com/${siteMetadata.social.facebook}`}\n                >\n                  <Icons.facebook />\n                </a>\n              )}\n              {siteMetadata.social.twitter && (\n                <a\n                  className='social-link social-link-tw'\n                  target='_blank'\n                  rel='noopener noreferrer'\n                  href={`https://twitter.com/${siteMetadata.social.twitter}`}\n                >\n                  <Icons.twitter />\n                </a>\n              )}\n            </div>\n            {/* <a className='subscribe-button' href='#subscribe'>Subscribe</a> */}\n            <a\n              className='rss-button'\n              target='_blank'\n              rel='noopener noreferrer'\n              href={`https://feedly.com/i/subscription/feed/${siteMetadata.siteUrl}/rss.xml`}\n            >\n              <Icons.rss />\n            </a>\n          </div>\n        </nav>\n      );\n    }}\n  />\n);\n\nexport default Navigation;\n","import React from 'react';\nimport PostCard from './PostCard';\n\nconst SCROLL_BUFFER = 100;\n\nexport default class PostList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postsToShow: props.postsPerPage,\n    };\n\n    this.maxPages = props.posts.length;\n    this.ticking = false;\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = () => {\n    if (!this.ticking) {\n      // console.log('Inside scroll handler')\n      this.ticking = true;\n      requestAnimationFrame(() => this.update());\n    }\n  };\n\n  update = () => {\n    const distaneToBottom =\n      document.documentElement.offsetHeight -\n      (window.scrollY + window.innerHeight);\n    if (distaneToBottom < SCROLL_BUFFER) {\n      // console.log('BU', this.state);\n      this.setState(\n        {\n          postsToShow: this.state.postsToShow + this.props.postsPerPage,\n        },\n        () => {\n          if (this.state.postsToShow >= this.maxPages)\n            window.removeEventListener('scroll', this.handleScroll);\n        }\n      );\n    }\n    this.ticking = false;\n  };\n\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <main id='site-main' className='site-main outer'>\n        <div className='inner'>\n          <div className='post-feed'>\n            {posts.slice(0, this.state.postsToShow).map((post, index) => (\n              <PostCard key={index} post={post.node} />\n            ))}\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n"],"sourceRoot":""}